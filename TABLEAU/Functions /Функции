üìå A ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è   |   –°–∏–Ω—Ç–∞–∫—Å–∏—Å                      |   –í—ã–≤–æ–¥                 |   –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU                                                           |   –ü—Ä–∏–º–µ—Ä                                                  |   –ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU                                               |
| --------- | -------------------------------- | ----------------------- | --------------------------------------------------------------------------- | --------------------------------------------------------- | --------------------------------------------------------------- |
| ABS       | `ABS(number)`                    | –ß–∏—Å–ª–æ (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ)   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞                                        | `ABS(-7) = 7`<br>`ABS([Budget Variance])`                 | –°–º. —Ç–∞–∫–∂–µ: `SIGN`                                               |
| ACOS      | `ACOS(number)`                   | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫–∫–æ—Å–∏–Ω—É—Å —á–∏—Å–ª–∞                                                 | `ACOS(-1) = 3.1415...`                                    | –û–±—Ä–∞—Ç–Ω–∞—è: `COS`                                                 |
| AND       | `<expr1> AND <expr2>`            | Boolean                 | –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ò, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç TRUE –µ—Å–ª–∏ –æ–±–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–∏–Ω–Ω—ã                    | `IF [Season]="Spring" AND [Season]="Fall" THEN "..." END` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ—Ä–æ—Ç–∫—É—é –æ—Ü–µ–Ω–∫—É —É—Å–ª–æ–≤–∏–π; —Å–º. —Ç–∞–∫–∂–µ `OR`, `NOT`       |
| AREA      | `AREA(Spatial Polygon, 'units')` | –ß–∏—Å–ª–æ                   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞                               | `AREA([Geometry], 'feet')`                                | –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –µ–¥–∏–Ω–∏—Ü—ã: 'meters', 'kilometers', 'miles', 'feet' |
| ASCII     | `ASCII(string)`                  | –ß–∏—Å–ª–æ                   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ASCII-–∫–æ–¥ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ —Å—Ç—Ä–æ–∫–∏                                 | `ASCII('A') = 65`                                         | –û–±—Ä–∞—Ç–Ω–∞—è: `CHAR`                                                |
| ASIN      | `ASIN(number)`                   | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫—Å–∏–Ω—É—Å —á–∏—Å–ª–∞                                                   | `ASIN(1) = 1.5707...`                                     | –û–±—Ä–∞—Ç–Ω–∞—è: `SIN`                                                 |
| ATAN      | `ATAN(number)`                   | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫—Ç–∞–Ω–≥–µ–Ω—Å —á–∏—Å–ª–∞                                                 | `ATAN(180) = 1.5652...`                                   | –û–±—Ä–∞—Ç–Ω–∞—è: `TAN`; —Å–º. —Ç–∞–∫–∂–µ `ATAN2`, `COT`                       |
| ATAN2     | `ATAN2(y, x)`                    | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫—Ç–∞–Ω–≥–µ–Ω—Å –º–µ–∂–¥—É y –∏ x                                           | `ATAN2(2, 1) = 1.1071...`                                 | –°–º. —Ç–∞–∫–∂–µ `ATAN`, `TAN`, `COT`                                  |
| ATTR      | `ATTR(expression)`               | –ó–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ `*`        | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫, –∏–Ω–∞—á–µ `*` |                                                           | Null –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è                                               |
| AVG       | `AVG(expression)`                | –ß–∏—Å–ª–æ                   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤—ã—Ä–∞–∂–µ–Ω–∏—è                                  |                                                           | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏                          |

üìå B ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è   | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                              | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                                                                                 | **–ü—Ä–∏–º–µ—Ä**                                                                                   | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                                             |
| --------- | ------------------------------------------ | --------- | ---------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- | --------------------------------------------------------------- |
| BUFFER    | `BUFFER(Spatial Point, distance, 'units')` | Geometry  | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–∏–≥–æ–Ω –≤–æ–∫—Ä—É–≥ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–æ—á–∫–∏ —Å —Ä–∞–¥–∏—É—Å–æ–º, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º—ã–º distance –∏ units | `BUFFER([Spatial Point Geometry], 25, 'mi')`<br>`BUFFER(MAKEPOINT(47.59, -122.32), 3, 'km')` | –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –µ–¥–∏–Ω–∏—Ü—ã: 'meters', 'kilometers', 'miles', 'feet' |

üìå C ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è    | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                                                         | **–í—ã–≤–æ–¥**                   | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                                                        | **–ü—Ä–∏–º–µ—Ä**                                                                                  | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                               |
| ---------  | --------------------------------------------------------------------- | --------------------------- | --------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- | ------------------------------------------------- |
| CASE       | `CASE <expression> WHEN <value> THEN <then> ... [ELSE <default>] END` | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö then | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Å–ø–∏—Å–∫—É –∑–Ω–∞—á–µ–Ω–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç | `CASE [Season] WHEN 'Summer' THEN 'Sandals' WHEN 'Winter' THEN 'Boots' ELSE 'Sneakers' END` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å WHEN, THEN, ELSE, END. –ê–Ω–∞–ª–æ–≥ `IF` |
| CEILING    | `CEILING(number)`                                                     | –¶–µ–ª–æ–µ                       | –û–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –≤–≤–µ—Ä—Ö –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ                                  | `CEILING(2.1) = 3`                                                                          | –°–º. —Ç–∞–∫–∂–µ `FLOOR`, `ROUND`                        |
| CHAR       | `CHAR(number)`                                                        | –°—Ç—Ä–æ–∫–∞                      | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª –ø–æ –∫–æ–¥—É ASCII                                             | `CHAR(65) = 'A'`                                                                            | –û–±—Ä–∞—Ç–Ω–∞—è –∫ `ASCII`                                |
| COLLECT    | `COLLECT(spatial)`                                                    | Geometry                    | –ê–≥—Ä–µ–≥–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö                          |                                                                                             | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏    |
| CONTAINS   | `CONTAINS(string, substring)`                                         | Boolean                     | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫—É                                     | `CONTAINS("Calculation", "alcu") = true`                                                    | –°–º. —Ç–∞–∫–∂–µ `IN`, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç RegEx                |
| CORR       | `CORR(expr1, expr2)`                                                  | –ß–∏—Å–ª–æ (-1 –¥–æ 1)             | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –ü–∏—Ä—Å–æ–Ω–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏           | `{CORR(Sales, Profit)}`                                                                     | –ö–≤–∞–¥—Ä–∞—Ç = R¬≤, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å LOD            |
| COS        | `COS(number)`                                                         | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Å–∏–Ω—É—Å —É–≥–ª–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö                                          | `COS(PI() / 4) = 0.7071...`                                                                 | –û–±—Ä–∞—Ç–Ω–∞—è: `ACOS`                                  |
| COT        | `COT(number)`                                                         | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ç–∞–Ω–≥–µ–Ω—Å —É–≥–ª–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö                                        | `COT(PI() / 4) = 1`                                                                         | –°–º. —Ç–∞–∫–∂–µ `ATAN`, `TAN`                           |
| COUNT      | `COUNT(expression)`                                                   | –¶–µ–ª–æ–µ                       | –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (NULL –Ω–µ —Å—á–∏—Ç–∞—é—Ç—Å—è)                            |                                                                                             | -                                                 |
| COUNTD     | `COUNTD(expression)`                                                  | –¶–µ–ª–æ–µ                       | –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π                                       |                                                                                             | -                                                 |
| COVAR      | `COVAR(expr1, expr2)`                                                 | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã–±–æ—Ä–æ—á–Ω—É—é –∫–æ–≤–∞—Ä–∏–∞—Ü–∏—é –¥–≤—É—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π                             |                                                                                             | –î–ª—è –≤—ã–±–æ—Ä–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö                             |
| COVARP     | `COVARP(expr1, expr2)`                                                | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–≤–∞—Ä–∏–∞—Ü–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏                          |                                                                                             | –î–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏                   |

üìå D ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è     | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                        | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                           | **–ü—Ä–∏–º–µ—Ä**                                     | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                      |
| ----------  | ------------------------------------ | --------------- | ---------------------------------------------- | ---------------------------------------------- | ---------------------------------------- |
| DATE        | `DATE(expression)`                   | –î–∞—Ç–∞            | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É/—á–∏—Å–ª–æ –≤ –¥–∞—Ç—É                | `DATE("9/22/2018")`                            | –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞, —Å–º. `DATEPARSE` |
| DATEADD     | `DATEADD(date_part, interval, date)` | –î–∞—Ç–∞            | –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª –∫ –¥–∞—Ç–µ                      | `DATEADD('day', 7, [Due Date])`                | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ISO 8601                       |
| DATEDIFF    | `DATEDIFF(date_part, date1, date2)`  | –¶–µ–ª–æ–µ           | –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö      | `DATEDIFF('day', #3/25/1986#, #2/20/2021#)`    | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ISO 8601                       |
| DATENAME    | `DATENAME(date_part, date)`          | –°—Ç—Ä–æ–∫–∞          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è —á–∞—Å—Ç–∏ –¥–∞—Ç—ã                      | `DATENAME('month', #1986-03-25#) = "March"`    | –°–º. —Ç–∞–∫–∂–µ `DATEPART`                     |
| DATEPARSE   | `DATEPARSE(format, string)`          | –î–∞—Ç–∞            | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É | `DATEPARSE('yyyy-MM-dd', "1986-03-25")`        | –î–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤                 |
| DATEPART    | `DATEPART(date_part, date)`          | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∞—Å—Ç—å –¥–∞—Ç—ã —á–∏—Å–ª–æ–º                   | `DATEPART('month', #1986-03-25#) = 3`          | –ë—ã—Å—Ç—Ä–µ–µ, —á–µ–º `DATENAME`                  |
| DATETIME    | `DATETIME(expression)`               | –î–∞—Ç–∞-–≤—Ä–µ–º—è      | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è                        | `DATETIME("April 15, 2005 07:59:00")`          | -                                        |
| DATETRUNC   | `DATETRUNC(date_part, date)`         | –î–∞—Ç–∞            | –£—Å–µ–∫–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏            | `DATETRUNC('month', #9/22/2018#) = #9/1/2018#` | -                                        |
| DAY         | `DAY(date)`                          | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ–Ω—å –º–µ—Å—è—Ü–∞                         | `DAY(#9/22/2018#) = 22`                        | –°–º. —Ç–∞–∫–∂–µ `MONTH`, `YEAR`                |
| DEGREES     | `DEGREES(number)`                    | –ß–∏—Å–ª–æ (–≥—Ä–∞–¥—É—Å—ã) | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä–∞–¥–∏–∞–Ω—ã –≤ –≥—Ä–∞–¥—É—Å—ã                  | `DEGREES(PI()/4) = 45`                         | –û–±—Ä–∞—Ç–Ω–∞—è: `RADIANS`                      |
| DISTANCE    | `DISTANCE(point1, point2, 'units')`  | –ß–∏—Å–ª–æ           | –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏                 | `DISTANCE([Point1], [Point2], 'km')`           | –ï–¥–∏–Ω–∏—Ü—ã: meters, km, miles, feet         |
| DIV         | `DIV(int1, int2)`                    | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–ª—É—é —á–∞—Å—Ç—å –æ—Ç –¥–µ–ª–µ–Ω–∏—è              | `DIV(11, 2) = 5`                               | -                                        |
| DOMAIN      | `DOMAIN(string_url)`                 | -               | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ–º–µ–Ω URL (—Ç–æ–ª—å–∫–æ –¥–ª—è BigQuery)     |                                                | –¢–æ–ª—å–∫–æ BigQuery                          |

üìå E ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è    | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                 | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                                            | **–ü—Ä–∏–º–µ—Ä**                                                | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                                  |
| ---------- | ----------------------------- | --------- | --------------------------------------------------------------- | --------------------------------------------------------- | ---------------------------------------------------- |
| ELSE       | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ `IF`, `CASE`   | -         | –ó–∞–¥–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ | `IF [Season]="Summer" THEN "Sandals" ELSE "Sneakers" END` | –ù–µ —Ç—Ä–µ–±—É–µ—Ç —É—Å–ª–æ–≤–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é |
| ELSEIF     | `ELSEIF <test> THEN <then>`   | -         | –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ `IF`                       | `IF ... ELSEIF [Season]="Winter" THEN "Boots"`            | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å `IF`, `THEN`, `ELSE`, `END`    |
| END        | –ó–∞–≤–µ—Ä—à–∞–µ—Ç `IF` / `CASE`       | -         | –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é `IF` –∏–ª–∏ `CASE`                           | `IF ... THEN ... ELSE ... END`                            | –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —É—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏                       |
| ENDSWITH   | `ENDSWITH(string, substring)` | Boolean   | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π                    | `ENDSWITH("Tableau", "eau") = TRUE`                       | –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–±–µ–ª—ã –≤ –∫–æ–Ω—Ü–µ                           |
| EXCLUDE    | -                             | -         | LOD –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: –∏—Å–∫–ª—é—á–∞–µ—Ç –∏–∑ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏                         | `{EXCLUDE [Region]: SUM([Sales])}`                        | –°–º. LOD Expressions                                  |
| EXP        | `EXP(number)`                 | –ß–∏—Å–ª–æ     | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç e –≤ —Å—Ç–µ–ø–µ–Ω–∏ —á–∏—Å–ª–∞                                    | `EXP(2) = 7.389`                                          | –°–º. —Ç–∞–∫–∂–µ `LN`                                       |

üìå F ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è    | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                            | **–í—ã–≤–æ–¥**                 | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                        | **–ü—Ä–∏–º–µ—Ä**                           | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**          |
| -----------| ---------------------------------------- | ------------------------- | ------------------------------------------- | ------------------------------------ | ---------------------------- |
| FIND       | `FIND(string, substring, [start])`       | –ß–∏—Å–ª–æ                     | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ       | `FIND("Calculation", "alcu") = 2`    | –ü–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª = 1            |
| FINDNTH    | `FINDNTH(string, substring, occurrence)` | –ß–∏—Å–ª–æ                     | –ü–æ–∑–∏—Ü–∏—è n-–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏            | `FINDNTH("Calculation", "a", 2) = 7` | –ù–µ –Ω–∞ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö        |
| FIRST      | `FIRST()`                                | –ß–∏—Å–ª–æ                     | –°–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–≤–æ–π |                                      | Table Calculation            |
| FIXED      | -                                        | -                         | LOD –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é        | `{FIXED [Category]: SUM([Sales])}`   | –°–º. LOD Expressions          |
| FLOAT      | `FLOAT(expression)`                      | –ß–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π | –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ç–∏–ø—É float                     | `FLOAT(3) = 3.000`                   | –°–º. —Ç–∞–∫–∂–µ `INT`              |
| FLOOR      | `FLOOR(number)`                          | –¶–µ–ª–æ–µ                     | –û–∫—Ä—É–≥–ª—è–µ—Ç –≤–Ω–∏–∑ –¥–æ —Ü–µ–ª–æ–≥–æ                    | `FLOOR(7.9) = 7`                     | –°–º. —Ç–∞–∫–∂–µ `CEILING`, `ROUND` |
| FULLNAME   | `FULLNAME()`                             | –°—Ç—Ä–æ–∫–∞                    | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | `FULLNAME()`                         | –î–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é |

üìå G ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è             | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                             | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**              | **–ü—Ä–∏–º–µ—Ä** | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**    |
| ------------------- | ----------------------------------------- | --------- | --------------------------------- | ---------- | ---------------------- |
| GET\_JSON\_OBJECT   | `GET_JSON_OBJECT(JSON_string, JSON_path)` | –°—Ç—Ä–æ–∫–∞    | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç JSON –ø–æ –ø—É—Ç–∏   |            | –¢–æ–ª—å–∫–æ Hadoop Hive     |
| GROUP\_CONCAT       | `GROUP_CONCAT(expression)`                | –°—Ç—Ä–æ–∫–∞    | –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É |            | –¢–æ–ª—å–∫–æ Google BigQuery |

üìå H ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è   | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**      | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                         | **–ü—Ä–∏–º–µ—Ä**                                 | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**     |
| ----------| ------------------ | --------- | -------------------------------------------- | ------------------------------------------ | ----------------------- |
| HEXBINX   | `HEXBINX(x, y)`    | –ß–∏—Å–ª–æ     | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç X-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –±–ª–∏–∂–∞–π—à–µ–≥–æ –≥–µ–∫—Å–∞–≥–æ–Ω–∞ | `HEXBINX([Longitude]*2.5, [Latitude]*2.5)` | –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è hex-–∫–∞—Ä—Ç |
| HEXBINY   | `HEXBINY(x, y)`    | –ß–∏—Å–ª–æ     | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Y-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –±–ª–∏–∂–∞–π—à–µ–≥–æ –≥–µ–∫—Å–∞–≥–æ–Ω–∞ | `HEXBINY([Longitude]*2.5, [Latitude]*2.5)` | -                       |
| HOST      | `HOST(string_url)` | –°—Ç—Ä–æ–∫–∞    | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ö–æ—Å—Ç –∏–∑ URL                       |                                            | –¢–æ–ª—å–∫–æ Google BigQuery  |

üìå I ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è        | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                             | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                            | **–ü—Ä–∏–º–µ—Ä**                                                | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                  |
| -------------- | ----------------------------------------- | --------------- | ----------------------------------------------- | --------------------------------------------------------- | ------------------------------------ |
|  IF            | `IF <test> THEN <then> [ELSE <else>] END` | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç then | –£—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞                                 | `IF [Season]="Summer" THEN "Sandals" ELSE "Sneakers" END` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å `THEN`, `ELSE`, `END` |
|  IFNULL        | `IFNULL(expr1, expr2)`                    | –¢–∏–ø expr        | –ï—Å–ª–∏ expr1 –Ω–µ NULL, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ, –∏–Ω–∞—á–µ expr2 | `IFNULL([Room], "TBD")`                                   | –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ NULL                   |
|  IIF           | `IIF(test, then, else, [unknown])`        | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç then | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞—è then –∏–ª–∏ else      | `IIF([Season]='Summer', 'Sandals', 'Other')`              | –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ `IF`                    |
|  IN            | `<expr1> IN <expr2>`                      | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ/–Ω–∞–±–æ—Ä–µ      | `SUM([Cost]) IN (1000, 15, 200)`                          | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å –Ω–∞–±–æ—Ä–∞–º–∏              |
|  INCLUDE       | -                                         | -               | LOD –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: –≤–∫–ª—é—á–∞–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é             | `{INCLUDE [Category]: SUM([Sales])}`                      | –°–º. LOD Expressions                  |
|  INDEX         | `INDEX()`                                 | –ß–∏—Å–ª–æ           | –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏                           |                                                           | Table Calculation                    |
|  INT           | `INT(expression)`                         | –¶–µ–ª–æ–µ           | –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ç–∏–ø—É integer                       | `INT(8/3) = 2`                                            | –°–º. —Ç–∞–∫–∂–µ `FLOAT`                    |
|  INTERSECTS    | `INTERSECTS(geometry1, geometry2)`        | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –≥–µ–æ–º–µ—Ç—Ä–∏–π                 |                                                           | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–æ—á–∫–∞/–ª–∏–Ω–∏—è/–ø–æ–ª–∏–≥–æ–Ω        |
|  ISDATE        | `ISDATE(string)`                          | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç–æ–π             | `ISDATE("9/22/2018") = TRUE`                              | –¢–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—Ä–æ–∫                     |
|  ISFULLNAME    | `ISFULLNAME("Full Name")`                 | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è             | `ISFULLNAME("Hamlin Myrer")`                              | –î–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π           |
|  ISMEMBEROF    | `ISMEMBEROF("Group Name")`                | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á–ª–µ–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ        | `ISMEMBEROF("Superstars")`                                | Tableau Server/Cloud                 |
|  ISNULL        | `ISNULL(expression)`                      | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ NULL            | `ISNULL([Room])`                                          | –°—Ä–∞–≤–Ω–∏ —Å `IFNULL`                    |
|  ISOQUARTER    | `ISOQUARTER(date)`                        | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–≤–∞—Ä—Ç–∞–ª –ø–æ ISO                       | `ISOQUARTER(#1986-03-25#) = 1`                            | –°–º. —Ç–∞–∫–∂–µ `ISOYEAR`                  |
|  ISOWEEK       | `ISOWEEK(date)`                           | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–¥–µ–ª—é –ø–æ ISO                        | `ISOWEEK(#1986-03-25#) = 13`                              | -                                    |
|  ISOWEEKDAY    | `ISOWEEKDAY(date)`                        | –¶–µ–ª–æ–µ           | –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –ø–æ ISO (1-7)                        | `ISOWEEKDAY(#1986-03-25#) = 2`                            | -                                    |
|  ISOYEAR       | `ISOYEAR(date)`                           | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ–¥ –ø–æ ISO                           | `ISOYEAR(#1986-03-25#) = 1986`                            | -                                    |
|  ISUSERNAME    | `ISUSERNAME("username")`                  | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è                      | `ISUSERNAME("hmyrer")`                                    | –î–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π           |

üìå L ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è     | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                  | **–í—ã–≤–æ–¥**            | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                             | **–ü—Ä–∏–º–µ—Ä**                        | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**           |
| ------------| ------------------------------ | -------------------- | ------------------------------------------------ | --------------------------------- | ------------------------ |
| LAST        | `LAST()`                       | –ß–∏—Å–ª–æ                | –°–º–µ—â–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏    |                                   | Table Calculation        |
| LEFT        | `LEFT(string, number)`         | –°—Ç—Ä–æ–∫–∞               | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç n –ª–µ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫–∏               | `LEFT("Matador", 4) = "Mata"`     | –°–º. —Ç–∞–∫–∂–µ `MID`, `RIGHT` |
| LEN         | `LEN(string)`                  | –ß–∏—Å–ª–æ                | –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏                                     | `LEN("Matador") = 7`              | –ù–µ –ø—É—Ç–∞—Ç—å —Å `LENGTH`     |
| LENGTH      | `LENGTH(geometry, 'units')`    | –ß–∏—Å–ª–æ                | –î–ª–∏–Ω–∞ –ª–∏–Ω–∏–∏/–≥–µ–æ–º–µ—Ç—Ä–∏–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö       | `LENGTH([Spatial], 'meters')`     | –ù–µ –ø—É—Ç–∞—Ç—å —Å `LEN`        |
| LN          | `LN(number)`                   | –ß–∏—Å–ª–æ                | –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ª–æ–≥–∞—Ä–∏—Ñ–º —á–∏—Å–ª–∞                       | `LN(50) = 3.912`                  | –°–º. `LOG`, `EXP`         |
| LOG         | `LOG(number, [base])`          | –ß–∏—Å–ª–æ                | –õ–æ–≥–∞—Ä–∏—Ñ–º –ø–æ –æ—Å–Ω–æ–≤–∞–Ω–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10)          | `LOG(16,4) = 2`                   | –°–º. `LN`, `POWER`        |
| LOG2        | `LOG2(number)`                 | –ß–∏—Å–ª–æ                | –õ–æ–≥–∞—Ä–∏—Ñ–º –ø–æ –æ—Å–Ω–æ–≤–∞–Ω–∏—é 2                          |                                   | –¢–æ–ª—å–∫–æ Google BigQuery   |
| LOOKUP      | `LOOKUP(expression, [offset])` | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏—è | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–æ —Å–º–µ—â–µ–Ω–∏—é |                                   | Table Calculation        |
| LOWER       | `LOWER(string)`                | –°—Ç—Ä–æ–∫–∞               | –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä                | `LOWER("Product") = "product"`    | –°–º. `UPPER`, `PROPER`    |
| LTRIM       | `LTRIM(string)`                | –°—Ç—Ä–æ–∫–∞               | –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å–ª–µ–≤–∞                            | `LTRIM(" Matador ") = "Matador "` | –°–º. `RTRIM`, `TRIM`      |
| LTRIM\_THIS | `LTRIM_THIS(string, string)`   | –°—Ç—Ä–æ–∫–∞               | –£–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã —Å–ª–µ–≤–∞                  |                                   | –¢–æ–ª—å–∫–æ Google BigQuery   |

üìå M ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è           | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                                         | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                      | **–ü—Ä–∏–º–µ—Ä**                                           | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**                             |
| ------------------| ----------------------------------------------------- | --------------- | ----------------------------------------- | ---------------------------------------------------- | ------------------------------------------ |
| MAKEDATE          | `MAKEDATE(year, month, day)`                          | –î–∞—Ç–∞            | –°–æ–∑–¥–∞–µ—Ç –¥–∞—Ç—É –∏–∑ –≥–æ–¥–∞, –º–µ—Å—è—Ü–∞ –∏ –¥–Ω—è        | `MAKEDATE(1986,3,25)`                                | –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç—Å—è      |
| MAKEDATETIME      | `MAKEDATETIME(date, time)`                            | –î–∞—Ç–∞-–≤—Ä–µ–º—è      | –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ datetime        | `MAKEDATETIME("1899-12-30", #07:59:00#)`             | –¢–æ–ª—å–∫–æ MySQL/Amazon Aurora                 |
| MAKELINE          | `MAKELINE(point1, point2)`                            | –ì–µ–æ–º–µ—Ç—Ä–∏—è       | –°–æ–∑–¥–∞–µ—Ç –ª–∏–Ω–∏—é –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏         |                                                      | –î–ª—è –∫–∞—Ä—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π                       |
| MAKEPOINT         | `MAKEPOINT(lat, lon, [SRID])`                         | –ì–µ–æ–º–µ—Ç—Ä–∏—è       | –°–æ–∑–¥–∞–µ—Ç —Ç–æ—á–∫—É –∏–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç                | `MAKEPOINT(48.5, -123.1)`                            | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ |
| MAKETIME          | `MAKETIME(hour, minute, second)`                      | –î–∞—Ç–∞-–≤—Ä–µ–º—è      | –°–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º—è (—Å –¥–∞—Ç–æ–π 1/1/1899)          | `MAKETIME(14,52,40)`                                 | –í—ã—Ö–æ–¥ = datetime                           |
| MAX               | `MAX(expr)` –∏–ª–∏ `MAX(expr1, expr2)`                   | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ          | `MAX(4,7)=7`                                         | –° –¥–∞—Ç–∞–º–∏ - —Å–∞–º–∞—è –ø–æ–∑–¥–Ω—è—è –¥–∞—Ç–∞              |
| MEDIAN            | `MEDIAN(expr)`                                        | –ß–∏—Å–ª–æ           | –ú–µ–¥–∏–∞–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–π                          |                                                      | –¢–æ–ª—å–∫–æ –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π                  |
| MID               | `MID(string, start, [length])`                        | –°—Ç—Ä–æ–∫–∞          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É —Å –ø–æ–∑–∏—Ü–∏–∏            | `MID("Calculation", 2, 5)="alcul"`                   | –°–º. —Ç–∞–∫–∂–µ `LEFT`, `RIGHT`                  |
| MIN               | `MIN(expr)` –∏–ª–∏ `MIN(expr1, expr2)`                   | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ           | `MIN(4,7)=4`                                         | –° –¥–∞—Ç–∞–º–∏ - —Å–∞–º–∞—è —Ä–∞–Ω–Ω—è—è –¥–∞—Ç–∞               |
| MODEL\_PERCENTILE | `MODEL_PERCENTILE(model, target, predictors)`         | –ß–∏—Å–ª–æ (0-1)     | –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ ‚â§ –Ω–∞–±–ª—é–¥–∞–µ–º–æ–º—É  | `MODEL_PERCENTILE(SUM([Sales]), COUNT([Orders]))`    | Advanced Analytics                         |
| MODEL\_QUANTILE   | `MODEL_QUANTILE(model, quantile, target, predictors)` | –ß–∏—Å–ª–æ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–≤–∞–Ω—Ç–∏–ª–µ | `MODEL_QUANTILE(0.5, SUM([Sales]), COUNT([Orders]))` | Advanced Analytics                         |
| MONTH             | `MONTH(date)`                                         | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Å—è—Ü –∏–∑ –¥–∞—Ç—ã                  | `MONTH(#1986-03-25#)=3`                              | –°–º. `DAY`, `YEAR`                          |

üìå N ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å** | **–í—ã–≤–æ–¥**  | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)** | **–ü—Ä–∏–º–µ—Ä**   | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**                |
| --------| ------------- | ---------- | -------------------- | ------------ | ----------------------------- |
| NOT     | `NOT <expr>`  | Boolean    | –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ | `NOT [Flag]` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å `IF`, `IIF`    |
| NOW     | `NOW()`       | –î–∞—Ç–∞-–≤—Ä–µ–º—è | –¢–µ–∫—É—â–∏–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è | `NOW()`      | –ê–Ω–∞–ª–æ–≥ `TODAY`, –Ω–æ —Å –≤—Ä–µ–º–µ–Ω–µ–º |

üìå O ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**              | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**        | **–ü—Ä–∏–º–µ—Ä**                                                | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**                 |
| --------| -------------------------- | --------- | --------------------------- | --------------------------------------------------------- | ------------------------------ |
| OR      | `<expr1> OR <expr2>`       | Boolean   | –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ò–õ–ò              | `IF [Season]="Spring" OR [Season]="Fall" THEN "Sneakers"` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç short-circuit       |
| OUTLINE | `OUTLINE(spatial_polygon)` | –ì–µ–æ–º–µ—Ç—Ä–∏—è | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø–æ–ª–∏–≥–æ–Ω –≤ –ª–∏–Ω–∏–∏ |                                                           | –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–µ–≤ —Å –∫–æ–Ω—Ç—É—Ä–∞–º–∏ |

üìå P ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è**         | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                  | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                       | **–ü—Ä–∏–º–µ—Ä**                                | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**               |
| ------------------| ------------------------------ | --------------- | ------------------------------------------ | ----------------------------------------- | ---------------------------- |
| PARSE\_URL        | `PARSE_URL(string, url_part)`  | –°—Ç—Ä–æ–∫–∞          | –ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∞—Å—Ç—å URL                        |                                           | –¢–æ–ª—å–∫–æ Cloudera Impala       |
| PARSE\_URL\_QUERY | `PARSE_URL_QUERY(string, key)` | –°—Ç—Ä–æ–∫–∞          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ URL          |                                           | –¢–æ–ª—å–∫–æ Cloudera Impala       |
| PERCENTILE        | `PERCENTILE(expr, number)`     | –ß–∏—Å–ª–æ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–∏–ª–µ | `PERCENTILE([Score], 0.9)`                | –î–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–µ—Ä—Ü–µ–Ω—Ç–∏–ª–µ–π   |
| PI                | `PI()`                         | –ß–∏—Å–ª–æ           | –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ œÄ = 3.14159...                   | `PI() = 3.14159`                          | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏ |
| POWER             | `POWER(number, power)`         | –ß–∏—Å–ª–æ           | –í–æ–∑–≤–æ–¥–∏—Ç –≤ —Å—Ç–µ–ø–µ–Ω—å                         | `POWER(5,3)=125`                          | –ê–Ω–∞–ª–æ–≥ `^`                   |
| PREVIOUS\_VALUE   | `PREVIOUS_VALUE(expr)`         | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è              |                                           | Table Calculation            |
| PROPER            | `PROPER(string)`               | –°—Ç—Ä–æ–∫–∞          | –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã             | `PROPER("product name") = "Product Name"` | –°–º. `LOWER`, `UPPER`         |

üìå Q ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**   | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**          | **–ü—Ä–∏–º–µ—Ä**                  | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**      |
| --------| --------------- | --------- | ----------------------------- | --------------------------- | ------------------- |
| QUARTER | `QUARTER(date)` | –¶–µ–ª–æ–µ     | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–≤–∞—Ä—Ç–∞–ª –¥–∞—Ç—ã (1-4) | `QUARTER(#1986-03-25#) = 1` | –°–º. `MONTH`, `YEAR` |

üìå R ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è                       | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                                  | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                 | **–ü—Ä–∏–º–µ—Ä**                                         | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**           |                   |
| ----------------------------- | ---------------------------------------------- | --------------- | ------------------------------------ | -------------------------------------------------- | ------------------------ | ----------------- |
| RADIANS                       | `RADIANS(number)`                              | –ß–∏—Å–ª–æ           | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≥—Ä–∞–¥—É—Å—ã –≤ —Ä–∞–¥–∏–∞–Ω—ã        | `RADIANS(180) = 3.14159`                           | –û–±—Ä–∞—Ç–Ω–∞—è: `DEGREES`      |                   |
| RANK                          | \`RANK(expr, \['asc'                           | 'desc'])\`      | –ß–∏—Å–ª–æ                                | –†–∞–Ω–≥ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–∞–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö                      |                          | Table Calculation |
| RAWSQL\_BOOL/DATE/STR/etc     | `RAWSQL_*(sql_expr, args)`                     | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SQL-–≤—ã—Ä–∞–∂–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é |                                                    | Pass-Through Functions   |                   |
| REGEXP\_EXTRACT               | `REGEXP_EXTRACT(string, pattern)`              | –°—Ç—Ä–æ–∫–∞          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ –ø–æ RegEx     |                                                    | –î–ª—è —à–∞–±–ª–æ–Ω–Ω—ã—Ö –∏–∑–≤–ª–µ—á–µ–Ω–∏–π |                   |
| REGEXP\_MATCH                 | `REGEXP_MATCH(string, pattern)`                | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å RegEx         |                                                    | -                        |                   |
| REGEXP\_REPLACE               | `REGEXP_REPLACE(string, pattern, replacement)` | –°—Ç—Ä–æ–∫–∞          | –ó–∞–º–µ–Ω—è–µ—Ç –ø–æ RegEx                    |                                                    | -                        |                   |
| REPLACE                       | `REPLACE(string, substring, replacement)`      | –°—Ç—Ä–æ–∫–∞          | –ó–∞–º–µ–Ω—è–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É –≤ —Å—Ç—Ä–æ–∫–µ          | `REPLACE("Version 3.8","3.8","4x") = "Version 4x"` | –°–º. `REGEXP_REPLACE`     |                   |
| RIGHT                         | `RIGHT(string, number)`                        | –°—Ç—Ä–æ–∫–∞          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç n –ø—Ä–∞–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤         | `RIGHT("Calculation", 4)="tion"`                   | –°–º. `LEFT`, `MID`        |                   |
| ROUND                         | `ROUND(number, [decimals])`                    | –ß–∏—Å–ª–æ           | –û–∫—Ä—É–≥–ª—è–µ—Ç –¥–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π    | `ROUND(1/3, 2)=0.33`                               | –°–º. `CEILING`, `FLOOR`   |                   |
| RTRIM                         | `RTRIM(string)`                                | –°—Ç—Ä–æ–∫–∞          | –£–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å–ø—Ä–∞–≤–∞               | `RTRIM(" Calc ")=" Calc"`                          | –°–º. `LTRIM`, `TRIM`      |                   |
| RUNNING\_* (AVG, SUM, etc.)*\ | `RUNNING_SUM(expr)`                            | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–∞—è —Å—É–º–º–∞/—Å—Ä–µ–¥–Ω–µ–µ          |                                                    | Table Calculation        |                   |

üìå S ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è                        | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                            | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                          | **–ü—Ä–∏–º–µ—Ä**                            | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**       |
| -------------------------------| ---------------------------------------- | --------------- | --------------------------------------------- | ------------------------------------- | -------------------- |
| SCRIPT\_* (BOOL, STR, etc.)*\* | `SCRIPT_*()`                             | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç—ã               |                                       | Table Calculation    |
| SHAPETYPE                      | `SHAPETYPE(geometry)`                    | –°—Ç—Ä–æ–∫–∞          | –¢–∏–ø –≥–µ–æ–º–µ—Ç—Ä–∏–∏ ("Point", "Polygon")            | `SHAPETYPE(MAKEPOINT(...)) = "Point"` | -                    |
| SIGN                           | `SIGN(number)`                           | -1, 0, 1        | –ó–Ω–∞–∫ —á–∏—Å–ª–∞                                    | `SIGN(-50)=-1`                        | –°–º. `ABS`            |
| SIN                            | `SIN(number)`                            | –ß–∏—Å–ª–æ           | –°–∏–Ω—É—Å —É–≥–ª–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö                         | `SIN(PI()/2)=1`                       | –û–±—Ä–∞—Ç–Ω–∞—è: `ASIN`     |
| SIZE                           | `SIZE()`                                 | –¶–µ–ª–æ–µ           | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ |                                       | Table Calculation    |
| SPACE                          | `SPACE(number)`                          | –°—Ç—Ä–æ–∫–∞          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ n –ø—Ä–æ–±–µ–ª–æ–≤               | `SPACE(3)="   "`                      | -                    |
| SPLIT                          | `SPLIT(string, delimiter, token_number)` | –°—Ç—Ä–æ–∫–∞          | –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é              | `SPLIT("a-b-c","-",2)="b"`            | -                    |
| SQRT                           | `SQRT(number)`                           | –ß–∏—Å–ª–æ           | –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å                             | `SQRT(25)=5`                          | –°–º. `SQUARE`         |
| SQUARE                         | `SQUARE(number)`                         | –ß–∏—Å–ª–æ           | –ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞                                 | `SQUARE(5)=25`                        | –°–º. `SQRT`           |
| STARTSWITH                     | `STARTSWITH(string, substring)`          | Boolean         | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏                       | `STARTSWITH("Tableau","Tab")=TRUE`    | –°–º. `CONTAINS`       |
| STDEV                          | `STDEV(expr)`                            | –ß–∏—Å–ª–æ           | –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∫–∏                |                                       | -                    |
| STDEVP                         | `STDEVP(expr)`                           | –ß–∏—Å–ª–æ           | –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ü–∏–∏              |                                       | -                    |
| STR                            | `STR(expression)`                        | –°—Ç—Ä–æ–∫–∞          | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ —Å—Ç—Ä–æ–∫—É                          | `STR([ID])`                           | -                    |
| SUM                            | `SUM(expression)`                        | –ß–∏—Å–ª–æ           | –°—É–º–º–∞ –∑–Ω–∞—á–µ–Ω–∏–π                                | `SUM([Sales])`                        | –¢–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –ø–æ–ª—è |

üìå T ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**               | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                                   | **–ü—Ä–∏–º–µ—Ä**                     | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**               |
| --------| --------------------------- | --------------- | ------------------------------------------------------ | ------------------------------ | ---------------------------- |
| TAN     | `TAN(number)`               | –ß–∏—Å–ª–æ           | –¢–∞–Ω–≥–µ–Ω—Å —É–≥–ª–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö                                | `TAN(PI()/4)=1`                | –°–º. `ATAN`, `RADIANS`        |
| THEN    | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ `IF`, `CASE` | -               | –£–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏—è | `IF [x]>0 THEN "Positive" END` | –û–±—è–∑–∞—Ç–µ–ª–µ–Ω –≤ `IF`, `CASE`    |
| TODAY   | `TODAY()`                   | –î–∞—Ç–∞            | –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞                                           | `TODAY()`                      | –ê–Ω–∞–ª–æ–≥ `NOW`, –Ω–æ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ |
| TOTAL   | `TOTAL(expression)`         | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –û–±—â–∞—è —Å—É–º–º–∞ –ø–æ —Ä–∞—Å—á–µ—Ç–∞–º                                |                                | Table Calculation            |
| TRIM    | `TRIM(string)`              | –°—Ç—Ä–æ–∫–∞          | –£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω                         | `TRIM(" a ")="a"`              | –°–º. `LTRIM`, `RTRIM`         |

üìå U ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è    | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**   | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                   | **–ü—Ä–∏–º–µ—Ä**             | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**               |
| -----------| --------------- | --------- | -------------------------------------- | ---------------------- | ---------------------------- |
| UPPER      | `UPPER(string)` | –°—Ç—Ä–æ–∫–∞    | –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä            | `UPPER("calc")="CALC"` | –°–º. `LOWER`, `PROPER`        |
| USERDOMAIN | `USERDOMAIN()`  | –°—Ç—Ä–æ–∫–∞    | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ–º–µ–Ω —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è |                        | Tableau Cloud/Server         |
| USERNAME   | `USERNAME()`    | –°—Ç—Ä–æ–∫–∞    | –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è                       | `USERNAME()="jdoe"`    | –î–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é |

üìå V ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**      | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)** | **–ü—Ä–∏–º–µ—Ä** | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è** |
| --------| ------------------ | --------- | -------------------- | ---------- | -------------- |
| VAR     | `VAR(expression)`  | –ß–∏—Å–ª–æ     | –î–∏—Å–ø–µ—Ä—Å–∏—è –≤—ã–±–æ—Ä–∫–∏    |            | -              |
| VARP    | `VARP(expression)` | –ß–∏—Å–ª–æ     | –î–∏—Å–ø–µ—Ä—Å–∏—è –ø–æ–ø—É–ª—è—Ü–∏–∏  |            | -              |

üìå W ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è                       | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**         | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**            | **–ü—Ä–∏–º–µ—Ä**                     | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**      |
| ------------------------------| --------------------- | --------------- | ------------------------------- | ------------------------------ | ------------------- |
| WEEK                          | `WEEK(date)`          | –¶–µ–ª–æ–µ           | –ù–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –∏–∑ –¥–∞—Ç—ã            | `WEEK(#1986-03-25#)=13`        | –°–º. `MONTH`, `YEAR` |
| WHEN                          | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ `CASE` | -               | –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ `CASE`      | `WHEN 'Summer' THEN 'Sandals'` | –° `CASE`, `THEN`    |
| WINDOW\_* (SUM, AVG, etc.)*\* | `WINDOW_SUM(expr)`    | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –û–∫–æ–Ω–Ω—ã–µ (—Å–∫–æ–ª—å–∑—è—â–∏–µ) –≤—ã—á–∏—Å–ª–µ–Ω–∏—è |                                | Table Calculation   |

üìå X ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è     | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**             | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**              | **–ü—Ä–∏–º–µ—Ä** | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**     |
| ------------| ------------------------- | --------------- | --------------------------------- | ---------- | ------------------ |
| XPATH\_**\* | `XPATH_STRING(xml, path)` | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ XML –ø–æ XPath |            | –¢–æ–ª—å–∫–æ Hadoop Hive |

üìå Y ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å** | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)** | **–ü—Ä–∏–º–µ—Ä**                | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**     |
| --------| ------------- | --------- | -------------------- | ------------------------- | ------------------ |
| YEAR    | `YEAR(date)`  | –¶–µ–ª–æ–µ     | –ì–æ–¥ –∏–∑ –¥–∞—Ç—ã          | `YEAR(#1986-03-25#)=1986` | –°–º. `MONTH`, `DAY` |

üìå Z ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| –§—É–Ω–∫—Ü–∏—è | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**    | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                       | **–ü—Ä–∏–º–µ—Ä**    | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è**              |
| --------| ---------------- | --------------- | ------------------------------------------ | ------------- | --------------------------- |
| ZN      | `ZN(expression)` | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ NULL, –∏–Ω–∞—á–µ 0 | `ZN([Grade])` | –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ `IFNULL` (—Å 0) |
