üìå A ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

|   –§—É–Ω–∫—Ü–∏—è   |   –°–∏–Ω—Ç–∞–∫—Å–∏—Å                      |   –í—ã–≤–æ–¥                 |   –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU                                                           |   –ü—Ä–∏–º–µ—Ä                                                  |   –ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU                                               |
| ----------- | -------------------------------- | ----------------------- | --------------------------------------------------------------------------- | --------------------------------------------------------- | --------------------------------------------------------------- |
|   ABS       | `ABS(number)`                    | –ß–∏—Å–ª–æ (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ)   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞                                        | `ABS(-7) = 7`<br>`ABS([Budget Variance])`                 | –°–º. —Ç–∞–∫–∂–µ: `SIGN`                                               |
|   ACOS      | `ACOS(number)`                   | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫–∫–æ—Å–∏–Ω—É—Å —á–∏—Å–ª–∞                                                 | `ACOS(-1) = 3.1415...`                                    | –û–±—Ä–∞—Ç–Ω–∞—è: `COS`                                                 |
|   AND       | `<expr1> AND <expr2>`            | Boolean                 | –õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ò, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç TRUE –µ—Å–ª–∏ –æ–±–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–∏–Ω–Ω—ã                    | `IF [Season]="Spring" AND [Season]="Fall" THEN "..." END` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ—Ä–æ—Ç–∫—É—é –æ—Ü–µ–Ω–∫—É —É—Å–ª–æ–≤–∏–π; —Å–º. —Ç–∞–∫–∂–µ `OR`, `NOT`       |
|   AREA      | `AREA(Spatial Polygon, 'units')` | –ß–∏—Å–ª–æ                   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞                               | `AREA([Geometry], 'feet')`                                | –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –µ–¥–∏–Ω–∏—Ü—ã: 'meters', 'kilometers', 'miles', 'feet' |
|   ASCII     | `ASCII(string)`                  | –ß–∏—Å–ª–æ                   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ASCII-–∫–æ–¥ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ —Å—Ç—Ä–æ–∫–∏                                 | `ASCII('A') = 65`                                         | –û–±—Ä–∞—Ç–Ω–∞—è: `CHAR`                                                |
|   ASIN      | `ASIN(number)`                   | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫—Å–∏–Ω—É—Å —á–∏—Å–ª–∞                                                   | `ASIN(1) = 1.5707...`                                     | –û–±—Ä–∞—Ç–Ω–∞—è: `SIN`                                                 |
|   ATAN      | `ATAN(number)`                   | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫—Ç–∞–Ω–≥–µ–Ω—Å —á–∏—Å–ª–∞                                                 | `ATAN(180) = 1.5652...`                                   | –û–±—Ä–∞—Ç–Ω–∞—è: `TAN`; —Å–º. —Ç–∞–∫–∂–µ `ATAN2`, `COT`                       |
|   ATAN2     | `ATAN2(y, x)`                    | –ß–∏—Å–ª–æ (—É–≥–æ–ª –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞—Ä–∫—Ç–∞–Ω–≥–µ–Ω—Å –º–µ–∂–¥—É y –∏ x                                           | `ATAN2(2, 1) = 1.1071...`                                 | –°–º. —Ç–∞–∫–∂–µ `ATAN`, `TAN`, `COT`                                  |
|   ATTR      | `ATTR(expression)`               | –ó–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ `*`        | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫, –∏–Ω–∞—á–µ `*` |                                                           | Null –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è                                               |
|   AVG       | `AVG(expression)`                | –ß–∏—Å–ª–æ                   | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤—ã—Ä–∞–∂–µ–Ω–∏—è                                  |                                                           | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏                          |

üìå B ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| **–§—É–Ω–∫—Ü–∏—è** | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                              | **–í—ã–≤–æ–¥** | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                                                                                 | **–ü—Ä–∏–º–µ—Ä**                                                                                   | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                                             |
| ----------- | ------------------------------------------ | --------- | ---------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- | --------------------------------------------------------------- |
| **BUFFER**  | `BUFFER(Spatial Point, distance, 'units')` | Geometry  | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–∏–≥–æ–Ω –≤–æ–∫—Ä—É–≥ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–æ—á–∫–∏ —Å —Ä–∞–¥–∏—É—Å–æ–º, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º—ã–º distance –∏ units | `BUFFER([Spatial Point Geometry], 25, 'mi')`<br>`BUFFER(MAKEPOINT(47.59, -122.32), 3, 'km')` | –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –µ–¥–∏–Ω–∏—Ü—ã: 'meters', 'kilometers', 'miles', 'feet' |

üìå C ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| **–§—É–Ω–∫—Ü–∏—è**  | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                                                         | **–í—ã–≤–æ–¥**                   | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                                                        | **–ü—Ä–∏–º–µ—Ä**                                                                                  | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                               |
| ------------ | --------------------------------------------------------------------- | --------------------------- | --------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- | ------------------------------------------------- |
| **CASE**     | `CASE <expression> WHEN <value> THEN <then> ... [ELSE <default>] END` | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö then | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Å–ø–∏—Å–∫—É –∑–Ω–∞—á–µ–Ω–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç | `CASE [Season] WHEN 'Summer' THEN 'Sandals' WHEN 'Winter' THEN 'Boots' ELSE 'Sneakers' END` | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å WHEN, THEN, ELSE, END. –ê–Ω–∞–ª–æ–≥ `IF` |
| **CEILING**  | `CEILING(number)`                                                     | –¶–µ–ª–æ–µ                       | –û–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –≤–≤–µ—Ä—Ö –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ                                  | `CEILING(2.1) = 3`                                                                          | –°–º. —Ç–∞–∫–∂–µ `FLOOR`, `ROUND`                        |
| **CHAR**     | `CHAR(number)`                                                        | –°—Ç—Ä–æ–∫–∞                      | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–º–≤–æ–ª –ø–æ –∫–æ–¥—É ASCII                                             | `CHAR(65) = 'A'`                                                                            | –û–±—Ä–∞—Ç–Ω–∞—è –∫ `ASCII`                                |
| **COLLECT**  | `COLLECT(spatial)`                                                    | Geometry                    | –ê–≥—Ä–µ–≥–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö                          |                                                                                             | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏    |
| **CONTAINS** | `CONTAINS(string, substring)`                                         | Boolean                     | –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫—É                                     | `CONTAINS("Calculation", "alcu") = true`                                                    | –°–º. —Ç–∞–∫–∂–µ `IN`, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç RegEx                |
| **CORR**     | `CORR(expr1, expr2)`                                                  | –ß–∏—Å–ª–æ (-1 –¥–æ 1)             | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –ü–∏—Ä—Å–æ–Ω–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏           | `{CORR(Sales, Profit)}`                                                                     | –ö–≤–∞–¥—Ä–∞—Ç = R¬≤, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å LOD            |
| **COS**      | `COS(number)`                                                         | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Å–∏–Ω—É—Å —É–≥–ª–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö                                          | `COS(PI() / 4) = 0.7071...`                                                                 | –û–±—Ä–∞—Ç–Ω–∞—è: `ACOS`                                  |
| **COT**      | `COT(number)`                                                         | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ç–∞–Ω–≥–µ–Ω—Å —É–≥–ª–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö                                        | `COT(PI() / 4) = 1`                                                                         | –°–º. —Ç–∞–∫–∂–µ `ATAN`, `TAN`                           |
| **COUNT**    | `COUNT(expression)`                                                   | –¶–µ–ª–æ–µ                       | –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (NULL –Ω–µ —Å—á–∏—Ç–∞—é—Ç—Å—è)                            |                                                                                             | -                                                 |
| **COUNTD**   | `COUNTD(expression)`                                                  | –¶–µ–ª–æ–µ                       | –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π                                       |                                                                                             | -                                                 |
| **COVAR**    | `COVAR(expr1, expr2)`                                                 | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã–±–æ—Ä–æ—á–Ω—É—é –∫–æ–≤–∞—Ä–∏–∞—Ü–∏—é –¥–≤—É—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π                             |                                                                                             | –î–ª—è –≤—ã–±–æ—Ä–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö                             |
| **COVARP**   | `COVARP(expr1, expr2)`                                                | –ß–∏—Å–ª–æ                       | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–≤–∞—Ä–∏–∞—Ü–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–π —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏                          |                                                                                             | –î–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏                   |

üìå D ‚Äì –§—É–Ω–∫—Ü–∏–∏ Tableau üìå

| **–§—É–Ω–∫—Ü–∏—è**   | **–°–∏–Ω—Ç–∞–∫—Å–∏—Å**                        | **–í—ã–≤–æ–¥**       | **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (RU)**                           | **–ü—Ä–∏–º–µ—Ä**                                     | **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è (RU)**                      |
| ------------- | ------------------------------------ | --------------- | ---------------------------------------------- | ---------------------------------------------- | ---------------------------------------- |
| **DATE**      | `DATE(expression)`                   | –î–∞—Ç–∞            | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É/—á–∏—Å–ª–æ –≤ –¥–∞—Ç—É                | `DATE("9/22/2018")`                            | –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞, —Å–º. `DATEPARSE` |
| **DATEADD**   | `DATEADD(date_part, interval, date)` | –î–∞—Ç–∞            | –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª –∫ –¥–∞—Ç–µ                      | `DATEADD('day', 7, [Due Date])`                | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ISO 8601                       |
| **DATEDIFF**  | `DATEDIFF(date_part, date1, date2)`  | –¶–µ–ª–æ–µ           | –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö      | `DATEDIFF('day', #3/25/1986#, #2/20/2021#)`    | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ISO 8601                       |
| **DATENAME**  | `DATENAME(date_part, date)`          | –°—Ç—Ä–æ–∫–∞          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è —á–∞—Å—Ç–∏ –¥–∞—Ç—ã                      | `DATENAME('month', #1986-03-25#) = "March"`    | –°–º. —Ç–∞–∫–∂–µ `DATEPART`                     |
| **DATEPARSE** | `DATEPARSE(format, string)`          | –î–∞—Ç–∞            | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É | `DATEPARSE('yyyy-MM-dd', "1986-03-25")`        | –î–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤                 |
| **DATEPART**  | `DATEPART(date_part, date)`          | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∞—Å—Ç—å –¥–∞—Ç—ã —á–∏—Å–ª–æ–º                   | `DATEPART('month', #1986-03-25#) = 3`          | –ë—ã—Å—Ç—Ä–µ–µ, —á–µ–º `DATENAME`                  |
| **DATETIME**  | `DATETIME(expression)`               | –î–∞—Ç–∞-–≤—Ä–µ–º—è      | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è                        | `DATETIME("April 15, 2005 07:59:00")`          | -                                        |
| **DATETRUNC** | `DATETRUNC(date_part, date)`         | –î–∞—Ç–∞            | –£—Å–µ–∫–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏            | `DATETRUNC('month', #9/22/2018#) = #9/1/2018#` | -                                        |
| **DAY**       | `DAY(date)`                          | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ–Ω—å –º–µ—Å—è—Ü–∞                         | `DAY(#9/22/2018#) = 22`                        | –°–º. —Ç–∞–∫–∂–µ `MONTH`, `YEAR`                |
| **DEGREES**   | `DEGREES(number)`                    | –ß–∏—Å–ª–æ (–≥—Ä–∞–¥—É—Å—ã) | –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä–∞–¥–∏–∞–Ω—ã –≤ –≥—Ä–∞–¥—É—Å—ã                  | `DEGREES(PI()/4) = 45`                         | –û–±—Ä–∞—Ç–Ω–∞—è: `RADIANS`                      |
| **DISTANCE**  | `DISTANCE(point1, point2, 'units')`  | –ß–∏—Å–ª–æ           | –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏                 | `DISTANCE([Point1], [Point2], 'km')`           | –ï–¥–∏–Ω–∏—Ü—ã: meters, km, miles, feet         |
| **DIV**       | `DIV(int1, int2)`                    | –¶–µ–ª–æ–µ           | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–ª—É—é —á–∞—Å—Ç—å –æ—Ç –¥–µ–ª–µ–Ω–∏—è              | `DIV(11, 2) = 5`                               | -                                        |
| **DOMAIN**    | `DOMAIN(string_url)`                 | -               | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ–º–µ–Ω URL (—Ç–æ–ª—å–∫–æ –¥–ª—è BigQuery)     |                                                | –¢–æ–ª—å–∫–æ BigQuery                          |

