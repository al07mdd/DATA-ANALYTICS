üî∏üî∏üî∏ –£–†–û–ö 31. –†–ï–ì–£–õ–Ø–†–ù–´–ï –í–´–†–ê–ñ–ï–ù–ò–Ø üî∏üî∏üî∏

üìå 1. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è

–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è (RegEx) ‚Äì –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞, —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –∑–∞–º–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–æ–∫ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É.

–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:
–ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ –ø–æ —à–∞–±–ª–æ–Ω—É (email, —Ç–µ–ª–µ—Ñ–æ–Ω, –¥–∞—Ç—ã).
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ (–≤–∞–ª–∏–¥–∞—Ü–∏—è).
–ó–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–∞—Ç).
–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –ø–æ —Å–ª–æ–∂–Ω—ã–º —à–∞–±–ª–æ–Ω–∞–º.

–ì–¥–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è:
–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö.
–§–æ—Ä–º—ã –≤–≤–æ–¥–∞.
–ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞.
–ü–æ–∏—Å–∫ –∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞.

üìå 2. –ú–æ–¥—É–ª—å re

–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:
‚úÖ
import re

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
re.search(pattern, string)
re.match(pattern, string)
re.findall(pattern, string)
re.finditer(pattern, string)
re.sub(pattern, repl, string)
re.split(pattern, string)

üìå 3. –§—É–Ω–∫—Ü–∏—è findall

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —à–∞–±–ª–æ–Ω–∞.

–°–∏–Ω—Ç–∞–∫—Å–∏—Å:
‚úÖ
re.findall(pattern, string)

–ü—Ä–∏–º–µ—Ä:
‚úÖ
import re
text = "Python 3.9, Java 17, C++ 14"
numbers = re.findall(r"\\d+", text)
print(numbers)  # ['3', '9', '17', '14']

4. –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
–°–∏–º–≤–æ–ª
–û–ø–∏—Å–∞–Ω–∏–µ
\\d
–¶–∏—Ñ—Ä–∞ (0-9)
\\D
–ù–µ —Ü–∏—Ñ—Ä–∞
\\w
–ë—É–∫–≤–∞, —Ü–∏—Ñ—Ä–∞ –∏–ª–∏ _
\\W
–ù–µ –±—É–∫–≤–∞, —Ü–∏—Ñ—Ä–∞ –∏–ª–∏ _
\\s
–ü—Ä–æ–±–µ–ª, —Ç–∞–±—É–ª—è—Ü–∏—è, –ø–µ—Ä–µ–Ω–æ—Å
\\S
–ù–µ –ø—Ä–æ–±–µ–ª
.
–õ—é–±–æ–π —Å–∏–º–≤–æ–ª, –∫—Ä–æ–º–µ \\n

–ü—Ä–∏–º–µ—Ä:
‚úÖ
text = "\tPython 3.12, Java 17, C++ 14!\n"
print(re.findall(r"\\d", text))
print(re.findall(r"\\w", text))

5. –°–∏–º–≤–æ–ª r –ø–µ—Ä–µ–¥ —à–∞–±–ª–æ–Ω–æ–º

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ r (raw string) –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ \\.

–ü—Ä–∏–º–µ—Ä:

pattern = r"\\d"
print(re.findall(pattern, "Price: 123"))  # ['1', '2', '3']

6. –ö–ª–∞—Å—Å—ã —Å–∏–º–≤–æ–ª–æ–≤

–ü–æ–∑–≤–æ–ª—è—é—Ç –∏—Å–∫–∞—Ç—å –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–∑ –Ω–∞–±–æ—Ä–∞.

–ó–∞–ø–∏—Å—å

–û–ø–∏—Å–∞–Ω–∏–µ

[afc]

a, f –∏–ª–∏ c

[0-9]

–¶–∏—Ñ—Ä–∞ (0-9)

[a-z]

–°—Ç—Ä–æ—á–Ω–∞—è –±—É–∫–≤–∞

[A-Z]

–ó–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞

[^0-9]

–ù–µ —Ü–∏—Ñ—Ä–∞

–ü—Ä–∏–º–µ—Ä:

text = "Report, report2, report10"
print(re.findall(r"[rR]eport", text))
print(re.findall(r"[0-9]", text))

7. –ö–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã

–£–∫–∞–∑—ã–≤–∞—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —Å–∏–º–≤–æ–ª–∞.

–ö–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä

–û–ø–∏—Å–∞–Ω–∏–µ

+

1 –∏–ª–∏ –±–æ–ª–µ–µ

*

0 –∏–ª–∏ –±–æ–ª–µ–µ

?

0 –∏–ª–∏ 1

{n}

–†–æ–≤–Ω–æ n

{n,}

n –∏ –±–æ–ª–µ–µ

{n,m}

–û—Ç n –¥–æ m

–ü—Ä–∏–º–µ—Ä:

text = "Orders: ID123, ID4567, ID89"
print(re.findall(r"ID\\d{2,}", text))

8. –ñ–∞–¥–Ω—ã–µ –∏ –ª–µ–Ω–∏–≤—ã–µ –∫–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã

–ñ–∞–¥–Ω—ã–µ (*, +, {n,m}) –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—Ç –º–∞–∫—Å–∏–º—É–º.

–õ–µ–Ω–∏–≤—ã–µ (*?, +?, {n,m}?) –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—Ç –º–∏–Ω–∏–º—É–º.

–ü—Ä–∏–º–µ—Ä:

text = "<div>Hello</div><div>World</div>"
print(re.findall(r"<.*>", text))    # ['<div>Hello</div><div>World</div>']
print(re.findall(r"<.*?>", text))   # ['<div>', '</div>', '<div>', '</div>']

9. –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤

–ß—Ç–æ–±—ã –∏—Å–∫–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∫–∞–∫ —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \\.

–ü—Ä–∏–º–µ—Ä:

text = "report.txt, report2.txt"
print(re.findall(r"\\w+\\.txt", text))

10. –Ø–∫–æ—Ä—è

–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è.

–Ø–∫–æ—Ä—å

–û–ø–∏—Å–∞–Ω–∏–µ

^

–ù–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏

$

–ö–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏

\\b

–ì—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞

\\B

–ù–µ –≥—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞

–ü—Ä–∏–º–µ—Ä:

text = "Hello world!"
print(re.findall(r"^\\w+", text))   # ['Hello']
print(re.findall(r"\\w+$", text))   # ['world']

11. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ | –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.

–ü—Ä–∏–º–µ—Ä:

text = "2024-05-10 or 10/05/2024"
print(re.findall(r"(\\d{4}-\\d{2}-\\d{2}|\\d{2}/\\d{2}/\\d{4})", text))

12. –ì—Ä—É–ø–ø—ã

–°–∫–æ–±–∫–∏ () –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç —á–∞—Å—Ç–∏ —à–∞–±–ª–æ–Ω–∞.

–ü—Ä–∏–º–µ—Ä:

text = "Order ID: 12345, Invoice No: 67890"
match = re.search(r"Order ID: (\\d+), Invoice No: (\\d+)", text)
if match:
    print(match.group(1), match.group(2))

13. –§—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è re

re.match() ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏.

re.search() ‚Äî –∏—â–µ—Ç –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫–µ.

re.finditer() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–æ–≤ Match.

re.split() ‚Äî —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ —à–∞–±–ª–æ–Ω—É.

re.sub() ‚Äî –∑–∞–º–µ–Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è re.sub:

text = "apple,   banana , orange"
clean = re.sub(r"\\s*,\\s*", ", ", text)
print(clean)

14. –ó–∞–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è 1

–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ —à–∞–±–ª–æ–Ω —Å —Ç–µ–º, —á—Ç–æ –æ–Ω –Ω–∞–π–¥—ë—Ç:



\\d+ c) –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä



[a-zA-Z0-9]+ b) –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä



\\s+ a) –ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª–æ–≤



[^a-zA-Z0-9]+ d) –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ù–ï –±—É–∫–≤ –∏ –ù–ï —Ü–∏—Ñ—Ä

–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É:

re.findall(r"\\d+", "Value: 123")

–í –∫–∞–∫–æ–º —à–∞–±–ª–æ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–µ–Ω–∏–≤—ã–π –∫–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä?

–û—Ç–≤–µ—Ç: c. <.*?>

15. –ó–∞–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è 2

–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ —è–∫–æ—Ä—è:



^ b) –ù–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏



$ a) –ö–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏



\\b c) –ì—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞



\\B d) –ù–µ –≥—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞

–û—Ç–ª–∏—á–∏–µ re.match() –∏ re.search():

re.match() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏.

re.search() –∏—â–µ—Ç –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ.

16. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞

1) –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è

–£—Å–ª–æ–≤–∏—è: –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤, 1 –∑–∞–≥–ª–∞–≤–Ω–∞—è, 1 —Å—Ç—Ä–æ—á–Ω–∞—è, 1 —Ü–∏—Ñ—Ä–∞.

import re
password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
if (re.search(r"[A-Z]", password) and re.search(r"[a-z]", password) and
    re.search(r"\\d", password) and len(password) >= 8):
    print("–ü–∞—Ä–æ–ª—å –Ω–∞–¥—ë–∂–µ–Ω.")
else:
    print("–ü–∞—Ä–æ–ª—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.")

2) –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–æ–≤

import re
text = "Server1: 192.168.1.1, Server2: 10.0.0.254, Invalid: 999.123.456.78"
pattern = r"\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b"
candidates = re.findall(pattern, text)
valid_ips = [ip for ip in candidates if all(0 <= int(part) <= 255 for part in ip.split("."))]
for ip in valid_ips:
    print(ip)

–°–æ–æ–±—â–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å—Ä–∞–∑—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ Quizlet –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ —ç—Ç–æ–º—É —É—Ä–æ–∫—É.

