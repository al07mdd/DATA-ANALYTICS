üî∏üî∏üî∏ –£—Ä–æ–∫ 25. –ò–°–ö–õ–Æ–ß–ï–ù–ò–Ø: –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö üî∏üî∏üî∏

üìåüìå –ò—Å–∫–ª—é—á–µ–Ω–∏—è

üìå –ò—Å–∫–ª—é—á–µ–Ω–∏—è (exceptions) ‚Äì —ç—Ç–æ —Å–æ–±—ã—Ç–∏—è, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç –æ–± –æ—à–∏–±–∫–µ.

üîπ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π:

| –ò—Å–∫–ª—é—á–µ–Ω–∏–µ        | –ü—Ä–∏—á–∏–Ω–∞             | –ü—Ä–∏–º–µ—Ä             |
| ----------------- | ------------------- | ------------------ |
| ZeroDivisionError | –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å     | `print(10 / 0)`    |
| ValueError        | –û—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è     | `int("abc")`       |
| KeyError          | –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á | `print(info["b"])` |

üîπ –ó–∞—á–µ–º –Ω—É–∂–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π:

üî∏* –ü–æ–≤—ã—à–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã
üî∏* –£–ª—É—á—à–∞–µ—Ç –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
üî∏* –ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ

üîπ –ö–∞–∫ Python —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –æ—à–∏–±–∫–∏

1. –°–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è
2. –ï—Å–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π

‚úÖ –ü—Ä–∏–º–µ—Ä:
print(10 / 0)  # ZeroDivisionError
```

üîπ –ò–µ—Ä–∞—Ä—Ö–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏–π

–í—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –æ—Ç `BaseException`, –Ω–æ —á–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `Exception` –∏ –µ–≥–æ –ø–æ–¥–∫–ª–∞—Å—Å—ã.


üìåüìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π

üìå –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è try-except

‚úÖ
    # –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
except ExceptionType:
    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
```

‚úÖ
try:
    result = 10 / 0
except ZeroDivisionError:
    print("–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!")
```

---

üìå –ö–∞–∫ Python –≤—ã–±–∏—Ä–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

üî∏* –ü—Ä–æ–≤–µ—Ä–∫–∞ `except` —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑
üî∏* –ü–µ—Ä–≤—ã–π —Å–æ–≤–ø–∞–≤—à–∏–π ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è
üî∏* `Exception` ‚Äî –æ–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫

‚úÖ–ü—Ä–∏–º–µ—Ä:
try:
    result = 10 / 0
except IndexError:
    print("–ò–Ω–¥–µ–∫—Å –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞!")
except KeyError:
    print("–ö–ª—é—á –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
except Exception:
    print("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
```

üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π

‚úÖ
try:
    user_input = input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ")
    result = 10 / int(user_input)
except (ZeroDivisionError, ValueError):
    print("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
```

üìå –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

‚úÖ
try:
    number = int("abc")
except (ZeroDivisionError, ValueError) as e:
    print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
```

üìå try-except-else

‚úÖ
try:
    number = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
except ValueError:
    print("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
else:
    print(f"–í—ã –≤–≤–µ–ª–∏: {number}")
```

üìå try-except-finally

‚úÖ
try:
    number = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
    result = 10 / number
except ValueError:
    print("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
except ZeroDivisionError:
    print("–û—à–∏–±–∫–∞! –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å.")
finally:
    print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
```

üìå try-except-else-finally

‚úÖ
try:
    number = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
    result = 10 / number
except ValueError:
    print("–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
except ZeroDivisionError:
    print("–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å")
else:
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
finally:
    print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
```

üìå –í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π (raise)

‚úÖ
number = -1
if number < 0:
    raise ValueError("–ß–∏—Å–ª–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
```

üìåüìå –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (logging)

‚úÖ
import logging
logging.root.removeHandler(logging.root.handlers[0])
logging.basicConfig(level=logging.DEBUG)

logging.debug("–û—Ç–ª–∞–¥–∫–∞")
logging.info("–ò–Ω—Ñ–æ")
logging.warning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
logging.error("–û—à–∏–±–∫–∞")
logging.critical("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞")
```

üìå –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª:

‚úÖ
logging.basicConfig(filename="app.log", level=logging.INFO)
```

üìå –§–æ—Ä–º–∞—Ç:

‚úÖ
logging.basicConfig(
    filename="app.log",
    format="%(asctime)s - %(filename)s - %(lineno)d - %(levelname)s - %(message)s",
    level=logging.DEBUG
)
```

üîπüîπ –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

1.üî∏ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –æ–∂–∏–¥–∞–µ–º—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
2.üî∏ –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–¥ –≤ try
3.üî∏ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ finally –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
4.üî∏ –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ `logging`

---
