🔸🔸🔸 УРОК 21. МОДУЛЬ COLLECTIONS 🔸🔸🔸


📌📌 МОДУЛЬ TIME

📌 Основные функции: 

🔸* `time()` — возвращает текущее время в секундах с 1970 года.
🔸* `sleep(seconds)` — задерживает выполнение на указанное число секунд.

✅
print("Start")
time.sleep(2)
print("2 секунды спустя")

📌 Измерение времени выполнения:

✅
start = time.time()
range(1000000)
end = time.time()
print(f"Время: {end - start:.10f} секунд")


📌📌 МОДУЛЬ COLLECTIONS

📌 КЛАСС `ORDEREDDICT`

Сохраняет порядок добавления элементов.
✅
from collections import OrderedDict
od = OrderedDict()
od["a"] = 1
od["b"] = 2


📌 Метод `POPITEM(last=True)`

🔸* `last=True` — удаляет последний элемент
🔸* `last=False` — удаляет первый элемент

📌 Метод `move_to_end(key, last=True)`

🔸* Перемещает ключ в начало/конец.


📌 КЛАСС `DEFAULTDICT`

🔸Позволяет автоматически создавать значения по умолчанию для отсутствующих ключей.
✅
from collections import defaultdict

dd = defaultdict(int)
dd["a"] += 1
print(dd)



✅ Со списками по умолчанию
students = defaultdict(list)
students["class1"].append("Alice")
-


📌 КЛАСС `COUNTER`

🔸Позволяет подсчитывать частоту элементов.

✅
from collections import Counter
c = Counter("banana")
print(c)
```

🔸Методы:🔸

🔸* `most_common(n)` — n самых частых элементов
🔸* `elements()` — повторяет элементы по количеству
🔸* `update()` — увеличивает счётчики
🔸* `subtract()` — вычитает значения

🔸Операции:🔸

🔸* `+` — объединение
🔸* `-` — разность
🔸* `&` — пересечение (min)
🔸* `|` — объединение (max)
