üî∏üî∏üî∏ –£–†–û–ö 28_1. –§–ê–ô–õ–´ CSV –ò –ú–û–î–£–õ–¨ STATISTICSüî∏üî∏üî∏

üìå –§–û–†–ú–ê–¢ CSV

CSV (Comma-Separated Values) ‚Äî –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî —ç—Ç–æ –æ–¥–Ω–∞ –∑–∞–ø–∏—Å—å, –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª—è—é—Ç—Å—è –∑–∞–ø—è—Ç—ã–º–∏ (–∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏).

‚úÖ
**–ü—Ä–∏–º–µ—Ä:**
name,age,city
Alice,30,New York
Bob,25,London
Charlie,35,Paris
```

üî∏üî∏**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ CSV:**

üî∏* –ó–Ω–∞—á–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª—è—é—Ç—Å—è –∑–∞–ø—è—Ç–æ–π
üî∏* –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
üî∏* –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —á–∏—Ç–∞—é—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏
üî∏* –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Excel, –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö

üìå –°–†–ê–í–ù–ï–ù–ò–ï CSV –ò JSON

| –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞         | CSV           | JSON                                   |
| ---------------------- | ------------- | -------------------------------------- |
| –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö       | –¢–∞–±–ª–∏—á–Ω–∞—è     | –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∞—è                          |
| –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö            | –¢–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ | –°—Ç—Ä–æ–∫–∏, —á–∏—Å–ª–∞, –±—É–ª–µ–≤—ã, —Å–ø–∏—Å–∫–∏, –æ–±—ä–µ–∫—Ç—ã |
| –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å             | –ü—Ä–æ—Å—Ç–∞—è       | –¢—Ä–µ–±—É–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã            |
| –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è   | –ü—É—Å—Ç—ã–µ –ø–æ–ª—è   | null                                   |
| –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞           | –û–±—ã—á–Ω–æ –º–µ–Ω—å—à–µ | –ú–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ                      |
| –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã            | csv, Excel    | json, JavaScript                       |
| –°–∫–æ—Ä–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è/–∑–∞–ø–∏—Å–∏ | –í—ã—à–µ          | –ù–∏–∂–µ                                   |
| –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏  | –ù–µ—Ç           | –î–∞                                     |

---

üìå –†–ê–ë–û–¢–ê –° CSV –í PYTHON
‚úÖ
import csv

# –ß—Ç–µ–Ω–∏–µ
with open('sales.csv') as f:
    reader = csv.reader(f)
    for row in reader:
        print(row)

# –ó–∞–ø–∏—Å—å –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
with open('output.csv', 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(['name', 'age'])
    writer.writerow(['Alice', 30])

# –ó–∞–ø–∏—Å—å –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—Ä–æ–∫
rows = [['Alice', 30], ['Bob', 25], ['Charlie', 35]]
with open('output.csv', 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(['name', 'age'])
    writer.writerows(rows)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
with open('sales.csv', 'a', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(['Orange', 'Rainbow', '2025-07-04', '110', '2.00'])
```

üìå –†–ê–ë–û–¢–ê –°–û –°–õ–û–í–ê–†–Ø–ú–ò

‚úÖ
# –ß—Ç–µ–Ω–∏–µ
with open('sales.csv') as f:
    reader = csv.DictReader(f)
    for row in reader:
        print(row)

# –ó–∞–ø–∏—Å—å
with open('output.csv', 'w', newline='') as f:
    writer = csv.DictWriter(f, fieldnames=['name', 'age'])
    writer.writeheader()
    writer.writerow({'age': 30, 'name': 'Alice'})

# –ó–∞–ø–∏—Å—å —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤–∞—Ä–µ–π
new_persons = [
    {'name': 'David', 'age': 28},
    {'age': 34, 'name': 'Jane'},
    {'name': 'Anna', 'city': 'Berlin'},
    {'name': 'Martin', 'age': 20, 'city': 'London'}
]

with open('output.csv', 'a', newline='') as f:
    writer = csv.DictWriter(f, fieldnames=['name', 'age'], extrasaction='ignore')
    writer.writerows(new_persons)
```

üìå –ü–†–û–ü–£–©–ï–ù–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø

with open('output.csv') as f:
    reader = csv.reader(f)
    good_rows = []
    for row in reader:
        if any(field == '' for field in row):
            print("–ü—Ä–æ–ø—É—â–µ–Ω—ã:", row)
            continue
        good_rows.append(row)
```

üìå –ù–ï–î–û–°–¢–ê–¢–ö–ò –ú–û–î–£–õ–Ø CSV

* –ù–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
* –í—Å–µ –¥–∞–Ω–Ω—ã–µ ‚Äî —Å—Ç—Ä–æ–∫–∏, —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
* –ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä
* –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
* –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –æ—à–∏–±–æ–∫

üìå –î–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Ä–∞–±–æ—Ç—ã ‚Äî –º–æ–¥—É–ª—å **pandas**


üìåüìå –ú–û–î–£–õ–¨ STATISTICS

–ú–æ–¥—É–ª—å `statistics` ‚Äî –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

**–§—É–Ω–∫—Ü–∏–∏:**

* `mean()` ‚Äî —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ
* `geometric_mean()` ‚Äî –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ
* `harmonic_mean()` ‚Äî –≥–∞—Ä–º–æ–Ω–∏—á–µ—Å–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ
* `median()` ‚Äî –º–µ–¥–∏–∞–Ω–∞
* `mode()` ‚Äî –º–æ–¥–∞
* `quantiles()` ‚Äî –∫–≤–∞–Ω—Ç–∏–ª—å
* `stdev()` ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
* `variance()` ‚Äî –¥–∏—Å–ø–µ—Ä—Å–∏—è

‚úÖ
import statistics

nums = [12, 15, 14, 10, 1, 18, 17, 15, 15, 14, 200]
print(statistics.mean(nums))
print(statistics.median(nums))
print(statistics.mode(nums))
print(statistics.stdev(nums))
print(statistics.variance(nums))
```
