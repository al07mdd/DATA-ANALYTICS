УРОК 2. БАЗОВЫЕ ТИПЫ ДАННЫХ, РАБОТА С ФУНКЦИЯМИ

---- ТИП ДАННЫХ И ОБЪЕКТ
Объект в Python — это любое значение, с которым можно работать в программе. Всё в Python — это объект: числа, строки, списки и т.д. Каждый объект хранит данные и имеет определённый тип.

---- ДИНАМИЧЕСКАЯ ТИПИЗАЦИЯ
Python является динамически типизированным языком, что означает, что тип переменной определяется автоматически в момент присваивания значения, и он может меняться в процессе выполнения программы.

---- ПРИМИТИВНЫЕ ТИПЫ ДАННЫХ
Примитивные типы данных в Python включают:
- Целые числа (int)
- Числа с плавающей запятой (float)
- Строки (str)
- Логические значения (bool)
- NoneType (отсутствие значения)

---- ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ
Возвращаемое значение — это результат, который функция передаёт обратно в место своего вызова.
Функции могут возвращать значение, или ничего не возвращать, в последнем случае по умолчанию будет возвращено None.

---- ПРОЦЕДУРЫ В PYTHON
В Python нет отдельного понятия "процедура", но так называют функции, которые ничего не возвращают (или возвращают None).

---- ПЕРЕДАЧА АРГУМЕНТОВ В ФУНКЦИЮ
Аргументы в функцию можно передавать:
1. В виде значений (литералов)
2. В виде переменных
3. В виде результатов математических операций
4. В виде результатов выполнения других функций

---- ФУНКЦИЯ TYPE
Функция type используется для определения типа объекта. Пример:
```python
x = 10
print(type(x))  # <class 'int'>
```

---- КОНКАТЕНАЦИЯ
Конкатенация — объединение строк с использованием оператора `+`. Пример:
```python
str1 = "Привет"
str2 = "мир"
result = str1 + " " + str2
print(result)  # Привет мир
```

---- РАБОТА С КАВЫЧКАМИ В СТРОКАХ
Python позволяет использовать одинарные (' ') и двойные (" ") кавычки.

---- ЭКРАНИРОВАНИЕ СИМВОЛОВ И КАВЫЧЕК
Для экранирования используется обратный слэш (`\`). Пример:
```python
string1 = 'В строке есть \'одинарные\' и "двойные" кавычки.'
```
Специальные символы:
- `\n` — новая строка
- `\t` — табуляция

---- ПАРАМЕТРЫ SEP И END
Функция print имеет два полезных параметра:
- `sep` (разделитель)
- `end` (окончание строки)

Пример:
```python
print("one", "two", "three", sep="---")  # one---two---three
```
======================================================================================

**ПРАКТИЧЕСКАЯ РАБОТА**
1. Создайте программу, которая выведет строку: `She said: "It's amazing!"` двумя способами.
num = float(input("Введите число: "))

if num > 0:
    print("Число положительное")
elif num < 0:
    print("Число отрицательное")
else:
    print("Число равно нулю")

2. Напишите программу, которая трижды попросит пользователя ввести слово, а затем выведет все три введенных слова одной строкой, через многоточие, используя параметр `sep`.

login = input("Введите логин: ")

if login == "admin":
    print("Доступ разрешён")
else:
    print("Доступ запрещён")
